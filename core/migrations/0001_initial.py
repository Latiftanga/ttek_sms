# Generated by Django 5.0.14 on 2025-06-06 18:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('school_type', models.CharField(choices=[('basic', 'Basic School'), ('shs', 'Senior High School (SHS)'), ('technical', 'Technical/Vocational School'), ('combined', 'Combined School (Multiple Levels)')], max_length=20)),
                ('ownership', models.CharField(choices=[('public', 'Public/Government'), ('private', 'Private'), ('mission', 'Mission/Religious'), ('international', 'International')], max_length=20)),
                ('emis_code', models.CharField(blank=True, help_text='Educational Management Information System code', max_length=50, null=True, unique=True, verbose_name='EMIS Code')),
                ('ges_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='GES Number')),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('establishment_date', models.DateField(blank=True, null=True, verbose_name='Date of Establishment')),
                ('region', models.CharField(choices=[('greater_accra', 'Greater Accra'), ('ashanti', 'Ashanti'), ('western', 'Western'), ('eastern', 'Eastern'), ('central', 'Central'), ('volta', 'Volta'), ('northern', 'Northern'), ('upper_east', 'Upper East'), ('upper_west', 'Upper West'), ('bono', 'Bono'), ('ahafo', 'Ahafo'), ('bono_east', 'Bono East'), ('north_east', 'North East'), ('savannah', 'Savannah'), ('oti', 'Oti'), ('western_north', 'Western North')], max_length=20)),
                ('district', models.CharField(max_length=100)),
                ('town', models.CharField(max_length=100)),
                ('digital_address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ghana Post Digital Address')),
                ('physical_address', models.CharField(blank=True, max_length=255, null=True)),
                ('headmaster_name', models.CharField(max_length=255, verbose_name='Headmaster/Principal Name')),
                ('email', models.EmailField(max_length=254)),
                ('phone_primary', models.CharField(max_length=20)),
                ('phone_secondary', models.CharField(blank=True, max_length=20, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school_logos/')),
                ('motto', models.CharField(blank=True, max_length=255, null=True)),
                ('has_boarding', models.BooleanField(default=False, verbose_name='Offers Boarding Facilities')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
