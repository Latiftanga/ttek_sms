[
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "core.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "core.models",
        "description": "core.models",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Tenant",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Teacher",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "OperationalError",
        "importPath": "psycopg2",
        "description": "psycopg2",
        "isExtraImport": true,
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "OperationalError",
        "importPath": "django.db.utils",
        "description": "django.db.utils",
        "isExtraImport": true,
        "detail": "django.db.utils",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinLengthValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "RegexValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "secrets",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "secrets",
        "description": "secrets",
        "detail": "secrets",
        "documentation": {}
    },
    {
        "label": "HttpResponseNotFound",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "MiddlewareMixin",
        "importPath": "django.utils.deprecation",
        "description": "django.utils.deprecation",
        "isExtraImport": true,
        "detail": "django.utils.deprecation",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "PHONE_VALIDATOR",
        "importPath": "core.validators",
        "description": "core.validators",
        "isExtraImport": true,
        "detail": "core.validators",
        "documentation": {}
    },
    {
        "label": "GHANA_CARD_VALIDATOR",
        "importPath": "core.validators",
        "description": "core.validators",
        "isExtraImport": true,
        "detail": "core.validators",
        "documentation": {}
    },
    {
        "label": "TenantAwareManager",
        "importPath": "core.managers",
        "description": "core.managers",
        "isExtraImport": true,
        "detail": "core.managers",
        "documentation": {}
    },
    {
        "label": "TenantManager",
        "importPath": "core.managers",
        "description": "core.managers",
        "isExtraImport": true,
        "detail": "core.managers",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "core.managers",
        "description": "core.managers",
        "isExtraImport": true,
        "detail": "core.managers",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "constants",
        "importPath": "django.contrib.messages",
        "description": "django.contrib.messages",
        "isExtraImport": true,
        "detail": "django.contrib.messages",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "core.management.commands.create_sample_data",
        "description": "core.management.commands.create_sample_data",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Create sample data for testing multi-tenant functionality'\n    def handle(self, *args, **options):\n        self.stdout.write(self.style.SUCCESS('Creating sample data...'))\n        # Create sample schools\n        schools_data = [\n            {\n                'name': 'T.I. Ahmadiyya Senior High School',\n                'code': 'TIA',\n                'school_type': 'shs',",
        "detail": "core.management.commands.create_sample_data",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "core.management.commands.create_sample_data",
        "description": "core.management.commands.create_sample_data",
        "peekOfCode": "User = get_user_model()\nclass Command(BaseCommand):\n    help = 'Create sample data for testing multi-tenant functionality'\n    def handle(self, *args, **options):\n        self.stdout.write(self.style.SUCCESS('Creating sample data...'))\n        # Create sample schools\n        schools_data = [\n            {\n                'name': 'T.I. Ahmadiyya Senior High School',\n                'code': 'TIA',",
        "detail": "core.management.commands.create_sample_data",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "core.management.commands.wait_for_db",
        "description": "core.management.commands.wait_for_db",
        "peekOfCode": "class Command(BaseCommand):\n    \"\"\"Django command to wait for database\"\"\"\n    def handle(self, *args, **options):\n        \"\"\"Entrypoint for command. \"\"\"\n        self.stdout.write('Waiting for Database...')\n        db_up = False\n        while db_up is False:\n            try:\n                self.check(databases=['default'])\n                db_up = True",
        "detail": "core.management.commands.wait_for_db",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0001_initial",
        "description": "core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tenant',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class UserAdmin(BaseUserAdmin):\n    \"\"\"Admin for custom User model\"\"\"\n    list_display = ['username', 'school', 'email',\n                    'get_role_display', 'is_active', 'date_joined']\n    list_filter = ['school', 'is_active', 'is_staff',\n                   'is_teacher', 'is_student', 'is_admin', 'date_joined']\n    search_fields = ['username', 'email', 'school__name']\n    ordering = ['school', 'username']\n    fieldsets = (\n        (None, {'fields': ('username', 'password')}),",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "TenantAdmin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class TenantAdmin(admin.ModelAdmin):\n    \"\"\"Admin for School/Tenant model\"\"\"\n    list_display = [\n        'name', 'code', 'school_type', 'region', 'domain_info',\n        'is_active', 'student_count', 'teacher_count', 'view_logo'\n    ]\n    list_filter = ['school_type', 'ownership',\n                   'region', 'is_active', 'has_boarding']\n    search_fields = ['name', 'code', 'domain', 'subdomain', 'emis_code']\n    prepopulated_fields = {'slug': ('name',)}",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "SchoolFilterMixin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class SchoolFilterMixin:\n    \"\"\"Mixin to add school filtering to admin\"\"\"\n    def get_queryset(self, request):\n        \"\"\"Filter queryset based on school\"\"\"\n        qs = super().get_queryset(request)\n        if request.user.is_superuser:\n            return qs\n        # Add school-based filtering for non-superusers later\n        return qs\n    def formfield_for_foreignkey(self, db_field, request, **kwargs):",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "StudentAdmin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class StudentAdmin(SchoolFilterMixin, admin.ModelAdmin):\n    \"\"\"Admin for Student model\"\"\"\n    list_display = [\n        'student_id', 'first_name', 'last_name', 'gender',\n        'year_admitted', 'school', 'is_active', 'has_account'\n    ]\n    list_filter = ['school', 'gender', 'year_admitted', 'is_active']\n    search_fields = [\n        'student_id', 'first_name', 'last_name', 'email',\n        'ghana_card_number', 'school__name'",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "TeacherAdmin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class TeacherAdmin(SchoolFilterMixin, admin.ModelAdmin):\n    \"\"\"Admin for Teacher model\"\"\"\n    list_display = [\n        'teacher_id', 'first_name', 'last_name', 'gender',\n        'school', 'is_active', 'has_account'\n    ]\n    list_filter = ['school', 'gender', 'is_active']\n    search_fields = [\n        'teacher_id', 'first_name', 'last_name', 'email',\n        'ghana_card_number', 'school__name'",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "admin.site.site_header = \"School Management System\"\nadmin.site.site_title = \"School Admin\"\nadmin.site.index_title = \"Welcome to School Management System\"",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "admin.site.site_title = \"School Admin\"\nadmin.site.index_title = \"Welcome to School Management System\"",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "admin.site.index_title = \"Welcome to School Management System\"",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "CoreConfig",
        "kind": 6,
        "importPath": "core.apps",
        "description": "core.apps",
        "peekOfCode": "class CoreConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"core\"",
        "detail": "core.apps",
        "documentation": {}
    },
    {
        "label": "TenantAwareManager",
        "kind": 6,
        "importPath": "core.managers",
        "description": "core.managers",
        "peekOfCode": "class TenantAwareManager(models.Manager):\n    \"\"\"Manager for tenant-aware models\"\"\"\n    def for_school(self, school):\n        \"\"\"Filter queryset by school\"\"\"\n        return self.get_queryset().filter(school=school)\n    def active_for_school(self, school):\n        \"\"\"Filter active records for a school\"\"\"\n        return self.get_queryset().filter(school=school, is_active=True)\nclass TenantManager(models.Manager):\n    \"\"\"Manager for tenant operations\"\"\"",
        "detail": "core.managers",
        "documentation": {}
    },
    {
        "label": "TenantManager",
        "kind": 6,
        "importPath": "core.managers",
        "description": "core.managers",
        "peekOfCode": "class TenantManager(models.Manager):\n    \"\"\"Manager for tenant operations\"\"\"\n    def get_by_domain(self, domain):\n        \"\"\"Get tenant by domain or subdomain\"\"\"\n        # First try exact domain match\n        try:\n            return self.get(domain=domain, is_active=True)\n        except self.model.DoesNotExist:\n            pass\n        # Try subdomain match",
        "detail": "core.managers",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "core.managers",
        "description": "core.managers",
        "peekOfCode": "class UserManager(BaseUserManager):\n    \"\"\"Manager for users\"\"\"\n    def create_user(self, username, password=None, school=None, **extra_fields):\n        \"\"\"Create, save and return new user\"\"\"\n        if not username:\n            raise ValueError('User must have a username')\n        # For non-superusers, school is required\n        if not extra_fields.get('is_superuser', False) and not school:\n            raise ValueError('Non-superuser accounts must belong to a school')\n        user = self.model(username=username, school=school, **extra_fields)",
        "detail": "core.managers",
        "documentation": {}
    },
    {
        "label": "TenantMiddleware",
        "kind": 6,
        "importPath": "core.middleware",
        "description": "core.middleware",
        "peekOfCode": "class TenantMiddleware(MiddlewareMixin):\n    \"\"\"\n    Middleware to resolve tenant based on domain/subdomain\n    \"\"\"\n    def process_request(self, request):\n        # Get the host from request\n        host = request.get_host().lower()\n        # Remove port number if present (for development)\n        if ':' in host:\n            host = host.split(':')[0]",
        "detail": "core.middleware",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "core.middleware",
        "description": "core.middleware",
        "peekOfCode": "logger = logging.getLogger(__name__)\nclass TenantMiddleware(MiddlewareMixin):\n    \"\"\"\n    Middleware to resolve tenant based on domain/subdomain\n    \"\"\"\n    def process_request(self, request):\n        # Get the host from request\n        host = request.get_host().lower()\n        # Remove port number if present (for development)\n        if ':' in host:",
        "detail": "core.middleware",
        "documentation": {}
    },
    {
        "label": "IDGenerationMixin",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class IDGenerationMixin:\n    \"\"\"Mixin for models that need auto-generated IDs\"\"\"\n    ID_PREFIX = ''  # Default prefix, should be overridden in subclass\n    id_field = None  # Should be set in subclass\n    def generate_id(self):\n        \"\"\"Generate a unique ID based on the prefix, school code, and year\"\"\"\n        if not hasattr(self, 'school') or not self.school:\n            raise ValueError(\"School is required for ID generation\")\n        year = str(getattr(self, 'year_admitted', timezone.now().year))[-2:]\n        prefix = self.ID_PREFIX",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Tenant",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Tenant(models.Model):\n    TENANT_TYPE = [\n        ('basic', 'Basic School'),\n        ('shs', 'Senior High School (SHS)'),\n        ('technical', 'Technical/Vocational School'),\n        ('combined', 'Combined School (Multiple Levels)'),\n    ]\n    REGION_CHOICES = [\n        ('greater_accra', 'Greater Accra'),\n        ('ashanti', 'Ashanti'),",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "TenantAwareMixin",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class TenantAwareMixin(models.Model):\n    \"\"\"Mixin for models that belong to a school/tenant\"\"\"\n    school = models.ForeignKey(\n        Tenant,\n        on_delete=models.CASCADE,\n        # This creates related names like 'students', 'teachers', etc.\n        related_name=\"%(class)ss\",\n        null=True, blank=True  # Allow null for superusers\n    )\n    created_at = models.DateTimeField(auto_now_add=True, db_index=True)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Person",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Person(TenantAwareMixin):\n    GENDER_CHOICES = (('M', 'Male'), ('F', 'Female'))\n    # school field is inherited from TenantAwareMixin\n    user = models.OneToOneField(\n        settings.AUTH_USER_MODEL,\n        on_delete=models.SET_NULL,\n        related_name=\"%(class)s_profile\",\n        blank=True, null=True\n    )\n    first_name = models.CharField(",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin, TenantAwareMixin):\n    \"\"\"User in the system - each user belongs to a specific school/tenant\"\"\"\n    # school field is inherited from TenantAwareMixin\n    username = models.CharField(max_length=150, unique=True)\n    email = models.EmailField(max_length=255, blank=True, null=True)\n    is_active = models.BooleanField(default=True)\n    is_teacher = models.BooleanField(default=False)\n    is_student = models.BooleanField(default=False)\n    # School admin, not superuser\n    is_admin = models.BooleanField(default=False)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Student(Person, IDGenerationMixin):\n    \"\"\"Student profile\"\"\"\n    ID_PREFIX = 'STU'\n    id_field = 'student_id'\n    student_id = models.CharField(\n        max_length=20, unique=True, editable=False,\n        help_text=\"Auto-generated student ID\"\n    )\n    year_admitted = models.PositiveIntegerField(\n        \"Year Admitted\", default=timezone.now().year,",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Teacher",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class Teacher(Person, IDGenerationMixin):\n    \"\"\"Teacher profile\"\"\"\n    ID_PREFIX = 'TEA'\n    id_field = 'teacher_id'\n    teacher_id = models.CharField(\n        max_length=20, unique=True, editable=False,\n        help_text=\"Auto-generated teacher ID\"\n    )\n    class Meta:\n        verbose_name = 'Teacher'",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "app_name = 'core'\nurlpatterns = [\n    path('', views.school_dashboard, name='dashboard'),\n    path('about/', views.school_about, name='about'),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.school_dashboard, name='dashboard'),\n    path('about/', views.school_about, name='about'),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "PHONE_VALIDATOR",
        "kind": 5,
        "importPath": "core.validators",
        "description": "core.validators",
        "peekOfCode": "PHONE_VALIDATOR = RegexValidator(\n    regex=r'^(\\+233|0)[0-9]{9}$',\n    message=\"Phone number must be in format: +233XXXXXXXXX or 0XXXXXXXXX\"\n)\n# Ghana Card ID validator\nGHANA_CARD_VALIDATOR = RegexValidator(\n    regex=r'^GHA-[0-9]{9}-[0-9]$',\n    message=\"Ghana Card number must be in format: GHA-XXXXXXXXX-X\"\n)",
        "detail": "core.validators",
        "documentation": {}
    },
    {
        "label": "GHANA_CARD_VALIDATOR",
        "kind": 5,
        "importPath": "core.validators",
        "description": "core.validators",
        "peekOfCode": "GHANA_CARD_VALIDATOR = RegexValidator(\n    regex=r'^GHA-[0-9]{9}-[0-9]$',\n    message=\"Ghana Card number must be in format: GHA-XXXXXXXXX-X\"\n)",
        "detail": "core.validators",
        "documentation": {}
    },
    {
        "label": "school_dashboard",
        "kind": 2,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "def school_dashboard(request):\n    \"\"\"Main dashboard for each school\"\"\"\n    if not request.tenant:\n        return HttpResponse(\n            \"<h1>No School Found</h1><p>This domain is not associated with any school.</p>\",\n            status=404\n        )\n    school = request.tenant\n    # Get school statistics\n    students = Student.objects.active_for_school(school)",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "school_about",
        "kind": 2,
        "importPath": "core.views",
        "description": "core.views",
        "peekOfCode": "def school_about(request):\n    \"\"\"About page for each school\"\"\"\n    if not request.tenant:\n        raise Http404(\"School not found\")\n    school = request.tenant\n    context = {\n        'school': school,\n        'page_title': f'About {school.name}'\n    }\n    return render(request, 'core/about.html', context)",
        "detail": "core.views",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\n# Application definition\nDJANGO_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "DJANGO_APPS",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "DJANGO_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\nLOCAL_APPS = [\n    'core.apps.CoreConfig',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "LOCAL_APPS",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "LOCAL_APPS = [\n    'core.apps.CoreConfig',\n]\nINSTALLED_APPS = DJANGO_APPS + LOCAL_APPS\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    # Custom Middleware\n    'core.middleware.TenantMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    # Custom Middleware\n    'core.middleware.TenantMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "ROOT_URLCONF = 'sms.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "WSGI_APPLICATION = 'sms.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'HOST': os.environ.get('DB_HOST'),\n        'NAME': os.environ.get('DB_NAME'),\n        'USER': os.environ.get('DB_USER'),\n        'PASSWORD': os.environ.get('DB_PASS')",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'HOST': os.environ.get('DB_HOST'),\n        'NAME': os.environ.get('DB_NAME'),\n        'USER': os.environ.get('DB_USER'),\n        'PASSWORD': os.environ.get('DB_PASS')\n    }\n}\n# Custom user model",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "AUTH_USER_MODEL = 'core.User'\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'Africa/Accra'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "TIME_ZONE = 'Africa/Accra'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Login URLs",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Login URLs\nLOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/login/'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "STATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Login URLs\nLOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/login/'\n# Messages",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Login URLs\nLOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/login/'\n# Messages\nMESSAGE_TAGS = {",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Login URLs\nLOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/login/'\n# Messages\nMESSAGE_TAGS = {\n    messages.DEBUG: 'secondary',\n    messages.INFO: 'info',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\n# Login URLs\nLOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/login/'\n# Messages\nMESSAGE_TAGS = {\n    messages.DEBUG: 'secondary',\n    messages.INFO: 'info',\n    messages.SUCCESS: 'success',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "LOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/login/'\n# Messages\nMESSAGE_TAGS = {\n    messages.DEBUG: 'secondary',\n    messages.INFO: 'info',\n    messages.SUCCESS: 'success',\n    messages.WARNING: 'warning',\n    messages.ERROR: 'danger',",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/login/'\n# Messages\nMESSAGE_TAGS = {\n    messages.DEBUG: 'secondary',\n    messages.INFO: 'info',\n    messages.SUCCESS: 'success',\n    messages.WARNING: 'warning',\n    messages.ERROR: 'danger',\n}",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "LOGOUT_REDIRECT_URL = '/login/'\n# Messages\nMESSAGE_TAGS = {\n    messages.DEBUG: 'secondary',\n    messages.INFO: 'info',\n    messages.SUCCESS: 'success',\n    messages.WARNING: 'warning',\n    messages.ERROR: 'danger',\n}\n# Multi-tenancy settings",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TAGS",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "MESSAGE_TAGS = {\n    messages.DEBUG: 'secondary',\n    messages.INFO: 'info',\n    messages.SUCCESS: 'success',\n    messages.WARNING: 'warning',\n    messages.ERROR: 'danger',\n}\n# Multi-tenancy settings\nMAIN_DOMAIN = 'ttek.com'\nSITE_NAME = 'TTEK School Management System'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "MAIN_DOMAIN",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "MAIN_DOMAIN = 'ttek.com'\nSITE_NAME = 'TTEK School Management System'\nSUPPORT_EMAIL = 'support@ttek.com'\n# Session settings\nSESSION_COOKIE_AGE = 86400  # 24 hours\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "SITE_NAME",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "SITE_NAME = 'TTEK School Management System'\nSUPPORT_EMAIL = 'support@ttek.com'\n# Session settings\nSESSION_COOKIE_AGE = 86400  # 24 hours\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "SUPPORT_EMAIL",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "SUPPORT_EMAIL = 'support@ttek.com'\n# Session settings\nSESSION_COOKIE_AGE = 86400  # 24 hours\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_AGE",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "SESSION_COOKIE_AGE = 86400  # 24 hours\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "SESSION_EXPIRE_AT_BROWSER_CLOSE",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "SESSION_EXPIRE_AT_BROWSER_CLOSE = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "sms.settings.base",
        "description": "sms.settings.base",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sms.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "DEBUG = True\n# SECURITY WARNING: keep the secret key used in production secret!\n# In development, you can use a hardcoded key or get from environment\nSECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-0yn3d*!-w@svmlc%5o^mf&fd0gyux920^jco+9!1$3zrk755ts')\n# Development hosts\nALLOWED_HOSTS = [\n    'localhost',\n    '127.0.0.1',\n    '.localhost',  # Allow all subdomains of localhost\n    '*.ttek.com',  # Allow all subdomains of ttek.com",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-0yn3d*!-w@svmlc%5o^mf&fd0gyux920^jco+9!1$3zrk755ts')\n# Development hosts\nALLOWED_HOSTS = [\n    'localhost',\n    '127.0.0.1',\n    '.localhost',  # Allow all subdomains of localhost\n    '*.ttek.com',  # Allow all subdomains of ttek.com\n    '.ttek.com',   # Allow all subdomains of ttek.com\n    'tia.ttek.com',  # Specific subdomain\n    'tia.edu.gh'",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "ALLOWED_HOSTS = [\n    'localhost',\n    '127.0.0.1',\n    '.localhost',  # Allow all subdomains of localhost\n    '*.ttek.com',  # Allow all subdomains of ttek.com\n    '.ttek.com',   # Allow all subdomains of ttek.com\n    'tia.ttek.com',  # Specific subdomain\n    'tia.edu.gh'\n]\n# CSRF Configuration for development",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_SECURE",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "CSRF_COOKIE_SECURE = False\nCSRF_COOKIE_HTTPONLY = False\nCSRF_COOKIE_SAMESITE = 'Lax'\n# Session cookie settings for development\nSESSION_COOKIE_SECURE = False\n# Email backend for development (console)\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n# Development-specific logging (optional)\nLOGGING = {\n    'version': 1,",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_HTTPONLY",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "CSRF_COOKIE_HTTPONLY = False\nCSRF_COOKIE_SAMESITE = 'Lax'\n# Session cookie settings for development\nSESSION_COOKIE_SECURE = False\n# Email backend for development (console)\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n# Development-specific logging (optional)\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_SAMESITE",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "CSRF_COOKIE_SAMESITE = 'Lax'\n# Session cookie settings for development\nSESSION_COOKIE_SECURE = False\n# Email backend for development (console)\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n# Development-specific logging (optional)\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SECURE",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "SESSION_COOKIE_SECURE = False\n# Email backend for development (console)\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n# Development-specific logging (optional)\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n# Development-specific logging (optional)\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',\n        },\n    },",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "LOGGING",
        "kind": 5,
        "importPath": "sms.settings.dev",
        "description": "sms.settings.dev",
        "peekOfCode": "LOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'root': {\n        'handlers': ['console'],",
        "detail": "sms.settings.dev",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "DEBUG = False\n# SECURITY WARNING: define the correct hosts in production!\nALLOWED_HOSTS = [\n    'admin.ttek-sms.com',  # Main admin portal\n    '.ttek-sms.com',       # All subdomains\n    'ttek-sms.com',        # Main domain\n    # Add specific school custom domains\n    'tiashs.edu.gh',\n    'ghanasco.edu.gh',\n    'augusco.edu.gh',",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "ALLOWED_HOSTS = [\n    'admin.ttek-sms.com',  # Main admin portal\n    '.ttek-sms.com',       # All subdomains\n    'ttek-sms.com',        # Main domain\n    # Add specific school custom domains\n    'tiashs.edu.gh',\n    'ghanasco.edu.gh',\n    'augusco.edu.gh',\n    # Add more school domains as needed\n]",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.environ.get('DB_NAME', 'ttek_sms'),\n        'USER': os.environ.get('DB_USER', 'ttek_sms_user'),\n        'PASSWORD': os.environ.get('DB_PASSWORD'),\n        'HOST': os.environ.get('DB_HOST', 'localhost'),\n        'PORT': os.environ.get('DB_PORT', '5432'),\n    }\n}",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Security settings\nSECURE_SSL_REDIRECT = True\nSECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Security settings\nSECURE_SSL_REDIRECT = True\nSECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\nSECURE_CONTENT_TYPE_NOSNIFF = True",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Security settings\nSECURE_SSL_REDIRECT = True\nSECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Security settings\nSECURE_SSL_REDIRECT = True\nSECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_SSL_REDIRECT",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SECURE_SSL_REDIRECT = True\nSECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_HSTS_SECONDS",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_HSTS_INCLUDE_SUBDOMAINS",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_HSTS_PRELOAD",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SECURE_HSTS_PRELOAD = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_CONTENT_TYPE_NOSNIFF",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True\n# Email settings",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_BROWSER_XSS_FILTER",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SECURE_BROWSER_XSS_FILTER = True\nX_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True\n# Email settings\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "X_FRAME_OPTIONS",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "X_FRAME_OPTIONS = 'DENY'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True\n# Email settings\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_PROXY_SSL_HEADER",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n# Session security\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True\n# Email settings\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')\nEMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SECURE",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True\n# Email settings\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')\nEMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_SECURE",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "CSRF_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True\n# Email settings\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')\nEMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_HTTPONLY",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "CSRF_COOKIE_HTTPONLY = True\nSESSION_COOKIE_HTTPONLY = True\n# Email settings\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')\nEMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_HTTPONLY",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "SESSION_COOKIE_HTTPONLY = True\n# Email settings\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')\nEMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')\nEMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')\n# Caching\nCACHES = {",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')\nEMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')\n# Caching\nCACHES = {\n    'default': {",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "EMAIL_PORT = int(os.environ.get('EMAIL_PORT', '587'))\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')\n# Caching\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')\n# Caching\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': os.environ.get('REDIS_URL', 'redis://127.0.0.1:6379/1'),",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')\n# Caching\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': os.environ.get('REDIS_URL', 'redis://127.0.0.1:6379/1'),\n    }",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nDEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')\n# Caching\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': os.environ.get('REDIS_URL', 'redis://127.0.0.1:6379/1'),\n    }\n}",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FROM_EMAIL",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "DEFAULT_FROM_EMAIL = os.environ.get(\n    'DEFAULT_FROM_EMAIL', 'noreply@ttek-sms.com')\n# Caching\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': os.environ.get('REDIS_URL', 'redis://127.0.0.1:6379/1'),\n    }\n}\n# Logging",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "CACHES",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "CACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': os.environ.get('REDIS_URL', 'redis://127.0.0.1:6379/1'),\n    }\n}\n# Logging\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "LOGGING",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "LOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',\n            'style': '{',\n        },\n    },\n    'handlers': {",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "FILE_UPLOAD_MAX_MEMORY_SIZE",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880  # 5MB\nDATA_UPLOAD_MAX_MEMORY_SIZE = 5242880  # 5MB\n# Domain-specific settings\nDOMAIN_SETTINGS = {\n    'admin.ttek-sms.com': {\n        'portal_type': 'admin',\n        'ssl_required': True,\n    },\n    'default_subdomain': {\n        'portal_type': 'school',",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "DATA_UPLOAD_MAX_MEMORY_SIZE",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "DATA_UPLOAD_MAX_MEMORY_SIZE = 5242880  # 5MB\n# Domain-specific settings\nDOMAIN_SETTINGS = {\n    'admin.ttek-sms.com': {\n        'portal_type': 'admin',\n        'ssl_required': True,\n    },\n    'default_subdomain': {\n        'portal_type': 'school',\n        'ssl_required': True,",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "DOMAIN_SETTINGS",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "DOMAIN_SETTINGS = {\n    'admin.ttek-sms.com': {\n        'portal_type': 'admin',\n        'ssl_required': True,\n    },\n    'default_subdomain': {\n        'portal_type': 'school',\n        'ssl_required': True,\n    }\n}",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "BACKUP_SETTINGS",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "BACKUP_SETTINGS = {\n    'enabled': True,\n    'storage_path': '/var/backups/ttek_sms/',\n    'retention_days': 30,\n    'encryption_key': os.environ.get('BACKUP_ENCRYPTION_KEY'),\n}\n# Monitoring and alerting\nMONITORING = {\n    'sentry_dsn': os.environ.get('SENTRY_DSN'),\n    'slack_webhook': os.environ.get('SLACK_WEBHOOK_URL'),",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "MONITORING",
        "kind": 5,
        "importPath": "sms.settings.prod",
        "description": "sms.settings.prod",
        "peekOfCode": "MONITORING = {\n    'sentry_dsn': os.environ.get('SENTRY_DSN'),\n    'slack_webhook': os.environ.get('SLACK_WEBHOOK_URL'),\n    'email_alerts': [\n        'admin@ttek.com.gh',\n        'support@ttek.com.gh',\n    ]\n}",
        "detail": "sms.settings.prod",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "sms.asgi",
        "description": "sms.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "sms.asgi",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "sms.urls",
        "description": "sms.urls",
        "peekOfCode": "urlpatterns = [\n    path('dev/', admin.site.urls),\n    path('', include('core.urls')),\n]\n# Serve media files during development\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "sms.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "sms.wsgi",
        "description": "sms.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "sms.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sms.settings.dev')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]